# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  # defaults for any parameters that are not specified
  name: ''
  vmImage: ''


jobs:

- job: ${{ parameters.name }}Test
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      ${{ if eq(parameters.name, 'Linux') }}:
        python37_legacy:
          python.version: '3.7'
          RANDOMGEN_DEBUG: false
          CC: clang
          NUMPY: 1.17.5
        python38_legacy:
          python.version: '3.8'
          COVERAGE: true
          NUMPY: 1.16.6
        python39_latest:
          python.version: '3.9'
        python38_mid_conda:
          python.version: '3.8'
          USE_CONDA: true
          NUMPY: 1.18.5
          CYTHON: 0.29.21
        python_38_coverage:
          python.version: '3.8'
          PYPI: true
          COVERAGE: true
          RANDOMGEN_CYTHON_COVERAGE: false
          RANDOMGEN_DEBUG: false
        python_37_legacy_conda:
          python.version: '3.7'
          USE_CONDA: true
          COVERAGE: false
          NUMPY: 1.17.4
          TEST_INSTALL: true
      ${{ if eq(parameters.name, 'macOS') }}:
        python39_latest_macos:
          python.version: '3.9'

    maxParallel: 10

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
    displayName: 'Use Python $(python.version)'

  - bash: |
      if [[ ${USE_CONDA} == "true" ]]; then
        echo "##vso[task.prependpath]$CONDA/bin"
      fi
    displayName: 'Add conda to PATH if needed'

  - script: |
      source ci/azure/install-posix.sh
    displayName: 'Install dependencies'

  - script: |
     source ci/azure/update_path.sh
     flake8 randomgen
     black --check randomgen
     isort --check randomgen
    displayName: 'Check style and formatting'

  - script: |
      source ci/azure/update_path.sh
      python -m pip list
    displayName: 'List Configuration'

  - script: |
      source ci/azure/update_path.sh
      pip install -e . --no-build-isolation
    displayName: 'Install randomgen'

  - script: |
      source ci/azure/update_path.sh
      if [[ ${RANDOMGEN_CYTHON_COVERAGE} == "true" ]]; then
        export RANDOMGEN_CYTHON_COVERAGE="$COVERAGE"
      fi
      if [[ "$COVERAGE" == true ]]; then
        export COVERAGE_OPTIONS="--cov-config .coveragerc --cov=randomgen"
      fi
      echo pytest -r a --junitxml=junit/test-results.xml -n auto --durations=25 ${COVERAGE_OPTIONS} randomgen/tests/
      pytest -r a --junitxml=junit/test-results.xml -n auto --durations=25 ${COVERAGE_OPTIONS} randomgen/tests/
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
